from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class ArticleUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, title=None, content=None, tags=None):  # noqa: E501
        """ArticleUpdate - a model defined in OpenAPI

        :param title: The title of this ArticleUpdate.  # noqa: E501
        :type title: str
        :param content: The content of this ArticleUpdate.  # noqa: E501
        :type content: str
        :param tags: The tags of this ArticleUpdate.  # noqa: E501
        :type tags: List[str]
        """
        self.openapi_types = {
            'title': str,
            'content': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'title': 'title',
            'content': 'content',
            'tags': 'tags'
        }

        self._title = title
        self._content = content
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt) -> 'ArticleUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ArticleUpdate of this ArticleUpdate.  # noqa: E501
        :rtype: ArticleUpdate
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this ArticleUpdate.


        :return: The title of this ArticleUpdate.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this ArticleUpdate.


        :param title: The title of this ArticleUpdate.
        :type title: str
        """

        self._title = title

    @property
    def content(self) -> str:
        """Gets the content of this ArticleUpdate.


        :return: The content of this ArticleUpdate.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this ArticleUpdate.


        :param content: The content of this ArticleUpdate.
        :type content: str
        """

        self._content = content

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this ArticleUpdate.


        :return: The tags of this ArticleUpdate.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this ArticleUpdate.


        :param tags: The tags of this ArticleUpdate.
        :type tags: List[str]
        """

        self._tags = tags
