from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class Article(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, title=None, content=None, author=None, tags=None, created_at=None, updated_at=None):  # noqa: E501
        """Article - a model defined in OpenAPI

        :param id: The id of this Article.  # noqa: E501
        :type id: str
        :param title: The title of this Article.  # noqa: E501
        :type title: str
        :param content: The content of this Article.  # noqa: E501
        :type content: str
        :param author: The author of this Article.  # noqa: E501
        :type author: str
        :param tags: The tags of this Article.  # noqa: E501
        :type tags: List[str]
        :param created_at: The created_at of this Article.  # noqa: E501
        :type created_at: datetime
        :param updated_at: The updated_at of this Article.  # noqa: E501
        :type updated_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'title': str,
            'content': str,
            'author': str,
            'tags': List[str],
            'created_at': datetime,
            'updated_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'title': 'title',
            'content': 'content',
            'author': 'author',
            'tags': 'tags',
            'created_at': 'createdAt',
            'updated_at': 'updatedAt'
        }

        self._id = id
        self._title = title
        self._content = content
        self._author = author
        self._tags = tags
        self._created_at = created_at
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt) -> 'Article':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Article of this Article.  # noqa: E501
        :rtype: Article
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Article.


        :return: The id of this Article.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Article.


        :param id: The id of this Article.
        :type id: str
        """

        self._id = id

    @property
    def title(self) -> str:
        """Gets the title of this Article.


        :return: The title of this Article.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Article.


        :param title: The title of this Article.
        :type title: str
        """

        self._title = title

    @property
    def content(self) -> str:
        """Gets the content of this Article.


        :return: The content of this Article.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this Article.


        :param content: The content of this Article.
        :type content: str
        """

        self._content = content

    @property
    def author(self) -> str:
        """Gets the author of this Article.


        :return: The author of this Article.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author: str):
        """Sets the author of this Article.


        :param author: The author of this Article.
        :type author: str
        """

        self._author = author

    @property
    def tags(self) -> List[str]:
        """Gets the tags of this Article.


        :return: The tags of this Article.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags: List[str]):
        """Sets the tags of this Article.


        :param tags: The tags of this Article.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def created_at(self) -> datetime:
        """Gets the created_at of this Article.


        :return: The created_at of this Article.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at: datetime):
        """Sets the created_at of this Article.


        :param created_at: The created_at of this Article.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def updated_at(self) -> datetime:
        """Gets the updated_at of this Article.


        :return: The updated_at of this Article.
        :rtype: datetime
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at: datetime):
        """Sets the updated_at of this Article.


        :param updated_at: The updated_at of this Article.
        :type updated_at: datetime
        """

        self._updated_at = updated_at
